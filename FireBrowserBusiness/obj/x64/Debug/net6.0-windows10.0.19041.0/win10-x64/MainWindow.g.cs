#pragma checksum "C:\Users\JPJM-\source\repos\FireBrowserBusiness\FireBrowserWinUi3\FireBrowserBusiness\MainWindow.xaml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "F2C8691486EE2402F75FCECE6A578B5133C9F831CCC8D5C6F8F6EE82FDD8101B"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FireBrowserBusiness
{
    partial class MainWindow : 
        global::Microsoft.UI.Xaml.Window, 
        global::Microsoft.UI.Xaml.Markup.IComponentConnector
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private static class XamlBindingSetters
        {
            public static void Set_Microsoft_UI_Xaml_Controls_Button_Flyout(global::Microsoft.UI.Xaml.Controls.Button obj, global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase) global::Microsoft.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::Microsoft.UI.Xaml.Controls.Primitives.FlyoutBase), targetNullValue);
                }
                obj.Flyout = value;
            }
        };

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private class MainWindow_obj1_Bindings :
            global::Microsoft.UI.Xaml.Markup.IDataTemplateComponent,
            global::Microsoft.UI.Xaml.Markup.IXamlBindScopeDiagnostics,
            global::Microsoft.UI.Xaml.Markup.IComponentConnector,
            IMainWindow_Bindings
        {
            private global::FireBrowserBusiness.MainWindow dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::Microsoft.UI.Xaml.Controls.Button obj34;
            private global::Microsoft.UI.Xaml.Controls.Button obj36;
            private global::Microsoft.UI.Xaml.Controls.Button obj37;

            // Static fields for each binding's enabled/disabled state
            private static bool isobj34FlyoutDisabled = false;
            private static bool isobj36FlyoutDisabled = false;
            private static bool isobj37FlyoutDisabled = false;

            public MainWindow_obj1_Bindings()
            {
            }

            public void Disable(int lineNumber, int columnNumber)
            {
                if (lineNumber == 392 && columnNumber == 50)
                {
                    isobj34FlyoutDisabled = true;
                }
                else if (lineNumber == 394 && columnNumber == 43)
                {
                    isobj36FlyoutDisabled = true;
                }
                else if (lineNumber == 395 && columnNumber == 41)
                {
                    isobj37FlyoutDisabled = true;
                }
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 34: // MainWindow.xaml line 392
                        this.obj34 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 36: // MainWindow.xaml line 394
                        this.obj36 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    case 37: // MainWindow.xaml line 395
                        this.obj37 = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                        break;
                    default:
                        break;
                }
            }
                        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
                        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
                        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target) 
                        {
                            return null;
                        }

            // IDataTemplateComponent

            public void ProcessBindings(global::System.Object item, int itemIndex, int phase, out int nextPhase)
            {
                nextPhase = -1;
            }

            public void Recycle()
            {
                return;
            }

            // IMainWindow_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
            }

            public void DisconnectUnloadedObject(int connectionId)
            {
                throw new global::System.ArgumentException("No unloadable elements to disconnect.");
            }

            public bool SetDataRoot(global::System.Object newDataRoot)
            {
                if (newDataRoot != null)
                {
                    this.dataRoot = global::WinRT.CastExtensions.As<global::FireBrowserBusiness.MainWindow>(newDataRoot);
                    return true;
                }
                return false;
            }

            public void Activated(object obj, global::Microsoft.UI.Xaml.WindowActivatedEventArgs data)
            {
                this.Initialize();
            }

            public void Loading(global::Microsoft.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::FireBrowserBusiness.MainWindow obj, int phase)
            {
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | (1 << 0))) != 0)
                    {
                        this.Update_FavoritesFly(obj.FavoritesFly, phase);
                        this.Update_HistoryFlyoutMenu(obj.HistoryFlyoutMenu, phase);
                        this.Update_QRCodeFlyout(obj.QRCodeFlyout, phase);
                    }
                }
            }
            private void Update_FavoritesFly(global::Microsoft.UI.Xaml.Controls.Flyout obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainWindow.xaml line 392
                    if (!isobj34FlyoutDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Button_Flyout(this.obj34, obj, null);
                    }
                }
            }
            private void Update_HistoryFlyoutMenu(global::Microsoft.UI.Xaml.Controls.Flyout obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainWindow.xaml line 394
                    if (!isobj36FlyoutDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Button_Flyout(this.obj36, obj, null);
                    }
                }
            }
            private void Update_QRCodeFlyout(global::Microsoft.UI.Xaml.Controls.Flyout obj, int phase)
            {
                if ((phase & ((1 << 0) | NOT_PHASED )) != 0)
                {
                    // MainWindow.xaml line 395
                    if (!isobj37FlyoutDisabled)
                    {
                        XamlBindingSetters.Set_Microsoft_UI_Xaml_Controls_Button_Flyout(this.obj37, obj, null);
                    }
                }
            }
        }

        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2: // MainWindow.xaml line 21
                {
                    this.MoreFlyout = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                }
                break;
            case 3: // MainWindow.xaml line 116
                {
                    this.HistoryFly = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                }
                break;
            case 4: // MainWindow.xaml line 184
                {
                    this.FavoritesFly = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                }
                break;
            case 5: // MainWindow.xaml line 218
                {
                    this.QRCodeFlyout = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                }
                break;
            case 6: // MainWindow.xaml line 221
                {
                    this.QRCodeImage = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Image>(target);
                }
                break;
            case 7: // MainWindow.xaml line 194
                {
                    this.FavoritesSmallTitle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 8: // MainWindow.xaml line 209
                {
                    this.FavoritesListView = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            case 10: // MainWindow.xaml line 198
                {
                    this.OpenFavoritesMenu = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                }
                break;
            case 11: // MainWindow.xaml line 117
                {
                    this.HistoryMenuItem = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                }
                break;
            case 12: // MainWindow.xaml line 122
                {
                    this.HistoryFlyoutMenu = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Flyout>(target);
                }
                break;
            case 13: // MainWindow.xaml line 133
                {
                    this.HistorySmallTitle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 14: // MainWindow.xaml line 134
                {
                    this.HistorySearchMenuItem = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 15: // MainWindow.xaml line 162
                {
                    this.HistoryTemp = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.ListView>(target);
                }
                break;
            case 17: // MainWindow.xaml line 137
                {
                    this.SearchHistoryMenuFlyout = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 18: // MainWindow.xaml line 142
                {
                    this.MenuHistoryMenuFlyout = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 19: // MainWindow.xaml line 145
                {
                    this.ClearHistoryDataMenuItem = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                }
                break;
            case 20: // MainWindow.xaml line 150
                {
                    this.OpenHistoryMenuItem = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.MenuFlyoutItem>(target);
                }
                break;
            case 21: // MainWindow.xaml line 23
                {
                    this.menuheader = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.StackPanel>(target);
                }
                break;
            case 22: // MainWindow.xaml line 33
                {
                    this.UserBorder = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Border>(target);
                }
                break;
            case 23: // MainWindow.xaml line 69
                {
                    this.His = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 24: // MainWindow.xaml line 75
                {
                    this.Fav = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 25: // MainWindow.xaml line 90
                {
                    this.Icon = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.FontIcon>(target);
                }
                break;
            case 26: // MainWindow.xaml line 91
                {
                    this.TextFull = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 27: // MainWindow.xaml line 35
                {
                    this.UserFrame = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Frame>(target);
                }
                break;
            case 28: // MainWindow.xaml line 42
                {
                    this.UserNew = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 29: // MainWindow.xaml line 28
                {
                    this.UserName = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 30: // MainWindow.xaml line 242
                {
                    this.Tabs = global::WinRT.CastExtensions.As<global::FireBrowserBusiness.Controls.FireBrowserTabView>(target);
                    ((global::FireBrowserBusiness.Controls.FireBrowserTabView)this.Tabs).TabItemsChanged += this.Tabs_TabItemsChanged;
                    ((global::FireBrowserBusiness.Controls.FireBrowserTabView)this.Tabs).Loaded += this.Tabs_Loaded;
                    ((global::FireBrowserBusiness.Controls.FireBrowserTabView)this.Tabs).AddTabButtonClick += this.TabView_AddTabButtonClick;
                }
                break;
            case 31: // MainWindow.xaml line 285
                {
                    this.ClassicToolbar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                }
                break;
            case 32: // MainWindow.xaml line 338
                {
                    this.ToolBoxMore = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 33: // MainWindow.xaml line 366
                {
                    this.AddFav = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 34: // MainWindow.xaml line 392
                {
                    this.FavoritesButton = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 35: // MainWindow.xaml line 393
                {
                    this.DownBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 36: // MainWindow.xaml line 394
                {
                    this.History = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 37: // MainWindow.xaml line 395
                {
                    this.QrBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 38: // MainWindow.xaml line 382
                {
                    this.FavoriteTitle = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 39: // MainWindow.xaml line 385
                {
                    this.FavoriteUrl = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBox>(target);
                }
                break;
            case 40: // MainWindow.xaml line 342
                {
                    this.ReadBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 41: // MainWindow.xaml line 347
                {
                    this.AdBlock = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 42: // MainWindow.xaml line 352
                {
                    this.BtnTrans = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 43: // MainWindow.xaml line 357
                {
                    this.BtnDark = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 44: // MainWindow.xaml line 331
                {
                    this.UrlBox = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.AutoSuggestBox>(target);
                }
                break;
            case 45: // MainWindow.xaml line 332
                {
                    this.Secure = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 46: // MainWindow.xaml line 297
                {
                    this.BackBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 47: // MainWindow.xaml line 305
                {
                    this.ForwardBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 48: // MainWindow.xaml line 313
                {
                    this.RefreshBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 49: // MainWindow.xaml line 321
                {
                    this.HomeBtn = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Button>(target);
                }
                break;
            case 50: // MainWindow.xaml line 252
                {
                    this.Profile = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.PersonPicture>(target);
                }
                break;
            case 51: // MainWindow.xaml line 261
                {
                    this.Prof = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.TextBlock>(target);
                }
                break;
            case 52: // MainWindow.xaml line 279
                {
                    this.Apptitlebar = global::WinRT.CastExtensions.As<global::Microsoft.UI.Xaml.Controls.Grid>(target);
                    ((global::Microsoft.UI.Xaml.Controls.Grid)this.Apptitlebar).LayoutUpdated += this.Apptitlebar_LayoutUpdated;
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        /// <summary>
        /// GetBindingConnector(int connectionId, object target)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.UI.Xaml.Markup.Compiler"," 3.0.0.2309")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Microsoft.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1: // MainWindow.xaml line 2
                {                    
                    global::Microsoft.UI.Xaml.Window element1 = (global::Microsoft.UI.Xaml.Window)target;
                    MainWindow_obj1_Bindings bindings = new MainWindow_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Activated += bindings.Activated;
                }
                break;
            }
            return returnValue;
        }
    }
}

